From cf4ea5cc5b877f94bf4b16a53194120b89cc1429 Mon Sep 17 00:00:00 2001
From: "liukan.lk" <liukan.lk@alibaba-inc.com>
Date: Mon, 20 Jan 2025 15:36:11 +0800
Subject: [PATCH 3/3] tanh compatibility


diff --git a/include/flashinfer/math.cuh b/include/flashinfer/math.cuh
index 27c6351..9c03d11 100644
--- include/flashinfer/math.cuh
+++ include/flashinfer/math.cuh
@@ -126,7 +126,11 @@ __forceinline__ __device__ float rsqrt(float x) {
  */
 __forceinline__ __device__ float tanh(float x) {
   float y;
+#if __CUDA_ARCH__ >= 750
   asm volatile("tanh.approx.f32 %0, %1;" : "=f"(y) : "f"(x));
+#else
+  y = tanhf(x);
+#endif
   return y;
 }
 
@@ -135,10 +139,17 @@ __forceinline__ __device__ float tanh(float x) {
  * \param x input
  */
 __forceinline__ __device__ half2 tanh(half2 x) {
+#if __CUDA_ARCH__ >= 750
   uint32_t y_u32;
   uint32_t x_u32 = half2_as_uint32(x);
   asm volatile("tanh.approx.f16x2 %0, %1;" : "=r"(y_u32) : "r"(x_u32));
   return uint32_as_half2(y_u32);
+#else
+  float2 tmp = (__half22float2(x));
+  tmp.x = tanhf(tmp.x);
+  tmp.y = tanhf(tmp.y);
+  return __float22half2_rn(tmp);
+#endif
 }
 
 /*!
@@ -146,9 +157,13 @@ __forceinline__ __device__ half2 tanh(half2 x) {
  * \param x input
  */
 __forceinline__ __device__ half tanh(half x) {
+#if __CUDA_ARCH__ >= 750
   ushort y_u16;
   asm volatile("tanh.approx.f16 %0, %1;" : "=h"(y_u16) : "h"(__half_as_ushort(x)));
   return __ushort_as_half(y_u16);
+#else
+  return __float2half(tanhf(__half2float(x)));
+#endif
 }
 
 }  // namespace math
-- 
2.19.1.6.gb485710b

