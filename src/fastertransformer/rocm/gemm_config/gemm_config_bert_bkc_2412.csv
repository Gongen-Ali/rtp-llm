trans_a, trans_b, m, n, k, A_data_type, lda, stride_a, B_data_type, ldb, stride_b, C_data_type, ldc, stride_c, compute_type, batch_count, algo_index
N,N,2304,3840,768,f16_r,2304,0,f16_r,768,0,f16_r,2304,0,f32_r,1,170271
N,N,768,3840,768,f16_r,768,0,f16_r,768,0,f16_r,768,0,f32_r,1,169420
N,N,3072,3840,768,f16_r,3072,0,f16_r,768,0,f16_r,3072,0,f32_r,1,46022
N,N,768,3840,3072,f16_r,768,0,f16_r,3072,0,f16_r,768,0,f32_r,1,169529

#######################################################################
# - { a_type: "f16_r", b_type: "f16_r", c_type: "f16_r", d_type: "f16_r", compute_type: "f32_r", transA: 'T', transB: 'N', M: 2, N: 60, K: 768, alpha: 1.0, lda: 768, ldb: 768, beta: 1.0, ldc: 2, ldd: 2, algo: 0, solution_index: 0, flags: none, call_count: 1 }
# - { a_type: "f16_r", b_type: "f16_r", c_type: "f16_r", d_type: "f16_r", compute_type: "f32_r", transA: 'T', transB: 'N', M: 768, N: 60, K: 768, alpha: 1.0, lda: 768, ldb: 768, beta: 1.0, ldc: 768, ldd: 768, algo: 0, solution_index: 0, flags: none, call_count: 1 }
# - { a_type: "f16_r", b_type: "f16_r", c_type: "f16_r", d_type: "f16_r", compute_type: "f32_r", transA: 'N', transB: 'N', M: 768, N: 3840, K: 3072, alpha: 1.0, lda: 768, ldb: 3072, beta: 0.0, ldc: 768, ldd: 768, algo: 0, solution_index: 0, flags: none, call_count: 4 }
# - { a_type: "f16_r", b_type: "f16_r", c_type: "f16_r", d_type: "f16_r", compute_type: "f32_r", transA: 'N', transB: 'N', M: 3072, N: 3840, K: 768, alpha: 1.0, lda: 3072, ldb: 768, beta: 0.0, ldc: 3072, ldd: 3072, algo: 0, solution_index: 0, flags: none, call_count: 4 }
# - { a_type: "f16_r", b_type: "f16_r", c_type: "f16_r", d_type: "f16_r", compute_type: "f32_r", transA: 'N', transB: 'N', M: 768, N: 3840, K: 768, alpha: 1.0, lda: 768, ldb: 768, beta: 0.0, ldc: 768, ldd: 768, algo: 0, solution_index: 0, flags: none, call_count: 4 }
# - { a_type: "f16_r", b_type: "f16_r", c_type: "f16_r", d_type: "f16_r", compute_type: "f32_r", transA: 'N', transB: 'N', M: 2304, N: 3840, K: 768, alpha: 1.0, lda: 2304, ldb: 768, beta: 0.0, ldc: 2304, ldd: 2304, algo: 0, solution_index: 0, flags: none, call_count: 4 }
#######################################################################
# hipblaslt-bench -m 2304 -n 3840 -k 768 --lda 2304 --ldb 768 --ldc 2304 --ldd 2304  --stride_a 0 --stride_b 0 --stride_c 0 --stride_d 0 --stride_e 0 --alpha 1 --beta 0 --transA N --transB N --batch_count 1 --a_type f16_r --b_type f16_r --c_type f16_r --d_type f16_r --compute_type f32_r --scale_type f32_r --print_kernel_info --verify  --requested_solution -1
# hipblaslt-bench -m 768 -n 3840 -k 768 --lda 768 --ldb 768 --ldc 768 --ldd 768  --stride_a 0 --stride_b 0 --stride_c 0 --stride_d 0 --stride_e 0 --alpha 1 --beta 0 --transA N --transB N --batch_count 1 --a_type f16_r --b_type f16_r --c_type f16_r --d_type f16_r --compute_type f32_r --scale_type f32_r --print_kernel_info --verify  --requested_solution -1
# hipblaslt-bench -m 3072 -n 3840 -k 768 --lda 768 --ldb 768 --ldc 768 --ldd 3072 --stride_a 0 --stride_b 0 --stride_c 0 --stride_d 0 --stride_e 0 --alpha 1 --beta 0 --transA N --transB N --batch_count 1 --a_type f16_r --b_type f16_r --c_type f16_r --d_type f16_r --compute_type f32_r --scale_type f32_r --print_kernel_info --verify  --requested_solution -1
# hipblaslt-bench -m 768 -n 3840 -k 3072 --lda 768 --ldb 3072 --ldc 768 --ldd 768 --stride_a 0 --stride_b 0 --stride_c 0 --stride_d 0 --stride_e 0 --alpha 1 --beta 0 --transA N --transB N --batch_count 1 --a_type f16_r --b_type f16_r --c_type f16_r --d_type f16_r --compute_type f32_r --scale_type f32_r --print_kernel_info --verify  --requested_solution -1
